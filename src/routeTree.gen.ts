/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AppRouteImport } from './routes/app/route'
import { Route as authRouteImport } from './routes/(auth)/route'
import { Route as IndexImport } from './routes/index'
import { Route as AppIndexImport } from './routes/app/index'
import { Route as authSignupImport } from './routes/(auth)/signup'
import { Route as authLoginImport } from './routes/(auth)/login'
import { Route as AppSettingsRouteImport } from './routes/app/settings/route'
import { Route as AppSettingsIndexImport } from './routes/app/settings/index'
import { Route as AppSettingsTeamsImport } from './routes/app/settings/teams'
import { Route as AppSettingsProfileImport } from './routes/app/settings/profile'
import { Route as AppSettingsMembersImport } from './routes/app/settings/members'
import { Route as AppMoveIdImport } from './routes/app/move.$id'
import { Route as AppDocIdImport } from './routes/app/doc.$id'
import { Route as AppCollectionIdImport } from './routes/app/collection/$id'

// Create/Update Routes

const AppRouteRoute = AppRouteImport.update({
  id: '/app',
  path: '/app',
  getParentRoute: () => rootRoute,
} as any)

const authRouteRoute = authRouteImport.update({
  id: '/(auth)',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AppIndexRoute = AppIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRouteRoute,
} as any)

const authSignupRoute = authSignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => authRouteRoute,
} as any)

const authLoginRoute = authLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => authRouteRoute,
} as any)

const AppSettingsRouteRoute = AppSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppSettingsIndexRoute = AppSettingsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppSettingsRouteRoute,
} as any)

const AppSettingsTeamsRoute = AppSettingsTeamsImport.update({
  id: '/teams',
  path: '/teams',
  getParentRoute: () => AppSettingsRouteRoute,
} as any)

const AppSettingsProfileRoute = AppSettingsProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AppSettingsRouteRoute,
} as any)

const AppSettingsMembersRoute = AppSettingsMembersImport.update({
  id: '/members',
  path: '/members',
  getParentRoute: () => AppSettingsRouteRoute,
} as any)

const AppMoveIdRoute = AppMoveIdImport.update({
  id: '/move/$id',
  path: '/move/$id',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppDocIdRoute = AppDocIdImport.update({
  id: '/doc/$id',
  path: '/doc/$id',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppCollectionIdRoute = AppCollectionIdImport.update({
  id: '/collection/$id',
  path: '/collection/$id',
  getParentRoute: () => AppRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/(auth)': {
      id: '/(auth)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authRouteImport
      parentRoute: typeof rootRoute
    }
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRoute
    }
    '/app/settings': {
      id: '/app/settings'
      path: '/settings'
      fullPath: '/app/settings'
      preLoaderRoute: typeof AppSettingsRouteImport
      parentRoute: typeof AppRouteImport
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginImport
      parentRoute: typeof authRouteImport
    }
    '/(auth)/signup': {
      id: '/(auth)/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof authSignupImport
      parentRoute: typeof authRouteImport
    }
    '/app/': {
      id: '/app/'
      path: '/'
      fullPath: '/app/'
      preLoaderRoute: typeof AppIndexImport
      parentRoute: typeof AppRouteImport
    }
    '/app/collection/$id': {
      id: '/app/collection/$id'
      path: '/collection/$id'
      fullPath: '/app/collection/$id'
      preLoaderRoute: typeof AppCollectionIdImport
      parentRoute: typeof AppRouteImport
    }
    '/app/doc/$id': {
      id: '/app/doc/$id'
      path: '/doc/$id'
      fullPath: '/app/doc/$id'
      preLoaderRoute: typeof AppDocIdImport
      parentRoute: typeof AppRouteImport
    }
    '/app/move/$id': {
      id: '/app/move/$id'
      path: '/move/$id'
      fullPath: '/app/move/$id'
      preLoaderRoute: typeof AppMoveIdImport
      parentRoute: typeof AppRouteImport
    }
    '/app/settings/members': {
      id: '/app/settings/members'
      path: '/members'
      fullPath: '/app/settings/members'
      preLoaderRoute: typeof AppSettingsMembersImport
      parentRoute: typeof AppSettingsRouteImport
    }
    '/app/settings/profile': {
      id: '/app/settings/profile'
      path: '/profile'
      fullPath: '/app/settings/profile'
      preLoaderRoute: typeof AppSettingsProfileImport
      parentRoute: typeof AppSettingsRouteImport
    }
    '/app/settings/teams': {
      id: '/app/settings/teams'
      path: '/teams'
      fullPath: '/app/settings/teams'
      preLoaderRoute: typeof AppSettingsTeamsImport
      parentRoute: typeof AppSettingsRouteImport
    }
    '/app/settings/': {
      id: '/app/settings/'
      path: '/'
      fullPath: '/app/settings/'
      preLoaderRoute: typeof AppSettingsIndexImport
      parentRoute: typeof AppSettingsRouteImport
    }
  }
}

// Create and export the route tree

interface authRouteRouteChildren {
  authLoginRoute: typeof authLoginRoute
  authSignupRoute: typeof authSignupRoute
}

const authRouteRouteChildren: authRouteRouteChildren = {
  authLoginRoute: authLoginRoute,
  authSignupRoute: authSignupRoute,
}

const authRouteRouteWithChildren = authRouteRoute._addFileChildren(
  authRouteRouteChildren,
)

interface AppSettingsRouteRouteChildren {
  AppSettingsMembersRoute: typeof AppSettingsMembersRoute
  AppSettingsProfileRoute: typeof AppSettingsProfileRoute
  AppSettingsTeamsRoute: typeof AppSettingsTeamsRoute
  AppSettingsIndexRoute: typeof AppSettingsIndexRoute
}

const AppSettingsRouteRouteChildren: AppSettingsRouteRouteChildren = {
  AppSettingsMembersRoute: AppSettingsMembersRoute,
  AppSettingsProfileRoute: AppSettingsProfileRoute,
  AppSettingsTeamsRoute: AppSettingsTeamsRoute,
  AppSettingsIndexRoute: AppSettingsIndexRoute,
}

const AppSettingsRouteRouteWithChildren =
  AppSettingsRouteRoute._addFileChildren(AppSettingsRouteRouteChildren)

interface AppRouteRouteChildren {
  AppSettingsRouteRoute: typeof AppSettingsRouteRouteWithChildren
  AppIndexRoute: typeof AppIndexRoute
  AppCollectionIdRoute: typeof AppCollectionIdRoute
  AppDocIdRoute: typeof AppDocIdRoute
  AppMoveIdRoute: typeof AppMoveIdRoute
}

const AppRouteRouteChildren: AppRouteRouteChildren = {
  AppSettingsRouteRoute: AppSettingsRouteRouteWithChildren,
  AppIndexRoute: AppIndexRoute,
  AppCollectionIdRoute: AppCollectionIdRoute,
  AppDocIdRoute: AppDocIdRoute,
  AppMoveIdRoute: AppMoveIdRoute,
}

const AppRouteRouteWithChildren = AppRouteRoute._addFileChildren(
  AppRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof authRouteRouteWithChildren
  '/app': typeof AppRouteRouteWithChildren
  '/app/settings': typeof AppSettingsRouteRouteWithChildren
  '/login': typeof authLoginRoute
  '/signup': typeof authSignupRoute
  '/app/': typeof AppIndexRoute
  '/app/collection/$id': typeof AppCollectionIdRoute
  '/app/doc/$id': typeof AppDocIdRoute
  '/app/move/$id': typeof AppMoveIdRoute
  '/app/settings/members': typeof AppSettingsMembersRoute
  '/app/settings/profile': typeof AppSettingsProfileRoute
  '/app/settings/teams': typeof AppSettingsTeamsRoute
  '/app/settings/': typeof AppSettingsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof authRouteRouteWithChildren
  '/login': typeof authLoginRoute
  '/signup': typeof authSignupRoute
  '/app': typeof AppIndexRoute
  '/app/collection/$id': typeof AppCollectionIdRoute
  '/app/doc/$id': typeof AppDocIdRoute
  '/app/move/$id': typeof AppMoveIdRoute
  '/app/settings/members': typeof AppSettingsMembersRoute
  '/app/settings/profile': typeof AppSettingsProfileRoute
  '/app/settings/teams': typeof AppSettingsTeamsRoute
  '/app/settings': typeof AppSettingsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/(auth)': typeof authRouteRouteWithChildren
  '/app': typeof AppRouteRouteWithChildren
  '/app/settings': typeof AppSettingsRouteRouteWithChildren
  '/(auth)/login': typeof authLoginRoute
  '/(auth)/signup': typeof authSignupRoute
  '/app/': typeof AppIndexRoute
  '/app/collection/$id': typeof AppCollectionIdRoute
  '/app/doc/$id': typeof AppDocIdRoute
  '/app/move/$id': typeof AppMoveIdRoute
  '/app/settings/members': typeof AppSettingsMembersRoute
  '/app/settings/profile': typeof AppSettingsProfileRoute
  '/app/settings/teams': typeof AppSettingsTeamsRoute
  '/app/settings/': typeof AppSettingsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/app'
    | '/app/settings'
    | '/login'
    | '/signup'
    | '/app/'
    | '/app/collection/$id'
    | '/app/doc/$id'
    | '/app/move/$id'
    | '/app/settings/members'
    | '/app/settings/profile'
    | '/app/settings/teams'
    | '/app/settings/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/signup'
    | '/app'
    | '/app/collection/$id'
    | '/app/doc/$id'
    | '/app/move/$id'
    | '/app/settings/members'
    | '/app/settings/profile'
    | '/app/settings/teams'
    | '/app/settings'
  id:
    | '__root__'
    | '/'
    | '/(auth)'
    | '/app'
    | '/app/settings'
    | '/(auth)/login'
    | '/(auth)/signup'
    | '/app/'
    | '/app/collection/$id'
    | '/app/doc/$id'
    | '/app/move/$id'
    | '/app/settings/members'
    | '/app/settings/profile'
    | '/app/settings/teams'
    | '/app/settings/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  authRouteRoute: typeof authRouteRouteWithChildren
  AppRouteRoute: typeof AppRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  authRouteRoute: authRouteRouteWithChildren,
  AppRouteRoute: AppRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/(auth)",
        "/app"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/(auth)": {
      "filePath": "(auth)/route.tsx",
      "children": [
        "/(auth)/login",
        "/(auth)/signup"
      ]
    },
    "/app": {
      "filePath": "app/route.tsx",
      "children": [
        "/app/settings",
        "/app/",
        "/app/collection/$id",
        "/app/doc/$id",
        "/app/move/$id"
      ]
    },
    "/app/settings": {
      "filePath": "app/settings/route.tsx",
      "parent": "/app",
      "children": [
        "/app/settings/members",
        "/app/settings/profile",
        "/app/settings/teams",
        "/app/settings/"
      ]
    },
    "/(auth)/login": {
      "filePath": "(auth)/login.tsx",
      "parent": "/(auth)"
    },
    "/(auth)/signup": {
      "filePath": "(auth)/signup.tsx",
      "parent": "/(auth)"
    },
    "/app/": {
      "filePath": "app/index.tsx",
      "parent": "/app"
    },
    "/app/collection/$id": {
      "filePath": "app/collection/$id.tsx",
      "parent": "/app"
    },
    "/app/doc/$id": {
      "filePath": "app/doc.$id.tsx",
      "parent": "/app"
    },
    "/app/move/$id": {
      "filePath": "app/move.$id.tsx",
      "parent": "/app"
    },
    "/app/settings/members": {
      "filePath": "app/settings/members.tsx",
      "parent": "/app/settings"
    },
    "/app/settings/profile": {
      "filePath": "app/settings/profile.tsx",
      "parent": "/app/settings"
    },
    "/app/settings/teams": {
      "filePath": "app/settings/teams.tsx",
      "parent": "/app/settings"
    },
    "/app/settings/": {
      "filePath": "app/settings/index.tsx",
      "parent": "/app/settings"
    }
  }
}
ROUTE_MANIFEST_END */
